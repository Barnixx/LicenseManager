// <auto-generated />
using System;
using LicenseManagerInfrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LicenseManagerInfrastructure.Migrations
{
    [DbContext(typeof(LicenseManagerContext))]
    [Migration("20181212105617_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LicenseManagerCore.Domain.License", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HWID");

                    b.Property<string>("IP");

                    b.Property<string>("Key");

                    b.Property<DateTime>("ModifyDate");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Licenses","app");
                });

            modelBuilder.Entity("LicenseManagerCore.Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("Email");

                    b.Property<string>("LastLogin")
                        .HasColumnName("LastLogin");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnName("Username");

                    b.HasKey("Id");

                    b.ToTable("Users","app");
                });

            modelBuilder.Entity("LicenseManagerCore.Domain.UserDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Surname")
                        .HasColumnName("Surname");

                    b.Property<Guid?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("UsersDetails","app");
                });

            modelBuilder.Entity("LicenseManagerCore.Domain.License", b =>
                {
                    b.HasOne("LicenseManagerCore.Domain.User", "User")
                        .WithMany("Licenses")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("LicenseManagerCore.Domain.UserDetails", b =>
                {
                    b.HasOne("LicenseManagerCore.Domain.User", "User")
                        .WithOne("UserDetails")
                        .HasForeignKey("LicenseManagerCore.Domain.UserDetails", "UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
